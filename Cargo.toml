[package]
name = "sysinfo-cli"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[bin]]
name = "sysinfo"
path = "src/main.rs"

[dependencies]
clap = { version = "4.4.18", features = ["derive"] }
#colored = "2.1.0"
colored = { git = "https://github.com/colored-rs/colored" }
libc = "0.2.152"
sysinfo = "0.30.5"

[profile.release]
#opt-level = "z"
opt-level = "s"
lto = true
strip = true

#在 Rust 中，`opt-level` 参数控制着编译器的优化级别。`opt-level` 参数有多个选项，其中包括 `"z"` 和 `"s"`。它们分别表示不同的优化级别，影响编译后的二进制文件的大小和性能。
#
#1. **`opt-level = "z"`**: 这是 Rust 中的最小化优化级别。它会启用一些基本的优化，但主要目的是减小生成的二进制文件的大小。当你希望生成的二进制文件尽可能小，并且对性能要求不高时，可以选择这个选项。
#
#2. **`opt-level = "s"`**: 这是 Rust 中的默认优化级别。它会启用一些优化，包括删除未使用的代码、内联函数等，以提高程序的性能。与 `"z"` 相比，它会对生成的二进制文件进行更多的优化，但可能会导致二进制文件变大一些。
#
#总的来说，`opt-level = "z"` 会对二进制文件进行较少的优化，主要关注减小文件大小，而 `opt-level = "s"` 则会进行更多的优化以提高性能，但可能会导致生成的二进制文件稍大一些。你可以根据项目的需求和目标选择合适的优化级别。
